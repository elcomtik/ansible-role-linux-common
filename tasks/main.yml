---
# main tasks file for role linux_common

- name: "Gather os specific variables"
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
  tags: always

- name: "Remove cloud-init"
  ansible.builtin.import_tasks: remove_cloudinit.yml
  tags: cloudinit

- name: "Remove default non-priviledged user"
  ansible.builtin.import_tasks: default_user_cleanup.yml
  when: remove_default_user | bool
  tags: default_user_cleanup

- name: "Update whole system"
  ansible.builtin.import_tasks: update_system.yml
  when: update_system | bool
  tags: update

- name: "Configure Canonical livepatch for Ubuntu systems"
  ansible.builtin.import_role:
    name: tsukune_ch.canonical_livepatch
  vars:
    ansible_become: true
  when:
    - ansible_distribution == "Ubuntu"
    - canonical_livepatch_enabled | bool
  tags: livepatching

- name: "Ensure common packages are installed or removed"
  ansible.builtin.import_tasks: common_pkgs.yml
  tags: common_pkgs

- name: "Get the list of services"
  ansible.builtin.service_facts:
  when: disable_kdump | bool
  tags: kdump

- name: "Disable & stop kdump service"
  become: true
  ansible.builtin.service:
    name: "kdump.service"
    state: "stopped"
    enabled: false
  when:
    - disable_kdump | bool
    - "'kdump.service' in ansible_facts.services"
  tags: kdump

- name: "Configure swap"
  ansible.builtin.import_role:
    name: geerlingguy.swap
  when: configure_swap | bool
  tags: swap

- name: "Setup unlimited bash history for root"
  ansible.builtin.import_tasks: unlimited_bash_history.yml
  tags: unlimited_bash_history

- name: "Configure SSH server"
  ansible.builtin.import_role:
    name: turgon37.ssh_server
  vars:
    ansible_become: true
  when: configure_ssh_server | bool
  tags: ssh_server

# - name: "Install & configure LSM for Redhat systems (SElinux)"
# - name: "Install & configure LSM for Debian systems (AppArmor)"

- name: "Get the list of services"
  ansible.builtin.service_facts:
  when: configure_interfaces | bool
  tags: interfaces

- name: "Disable & stop NetworkManager service"
  become: true
  ansible.builtin.service:
    name: "NetworkManager.service"
    state: "stopped"
    enabled: false
  when:
    - configure_interfaces | bool
    - "'NetworkManager.service' in ansible_facts.services"
  tags: interfaces

- name: "Configure DNS resolvers in /etc/resolv.conf"
  ansible.builtin.import_role:
    name: jdauphant.dns
  vars:
    ansible_become: true
    dns_forced_in_dhclientconf: false
  when: configure_dns_resolvers | bool
  tags: resolvers

- name: "Configure network interfaces"
  ansible.builtin.import_role:
    name: michaelrigart.interfaces
  when: configure_interfaces | bool
  tags: interfaces

- name: "Install & configure ntp"
  ansible.builtin.import_role:
    name: geerlingguy.ntp
  vars:
    ansible_become: true
  when: configure_ntp | bool
  tags: ntp

- name: "Install & configure rsyslog"
  ansible.builtin.import_role:
    name: robertdebock.rsyslog
  when: configure_rsyslog | bool
  tags: syslogs

- name: "Install & configure cronjob slack sender"
  ansible.builtin.import_tasks: cronjob_slack_sender.yml
  when: cronjob_slack_sender | bool
  tags: cronjobs

- name: "Install & configure firewalld"
  ansible.builtin.import_role:
    name: elcomtik.firewalld
  when: firewall_enabled | bool
  tags: firewall

- name: "Install & configure fail2ban"
  ansible.builtin.import_role:
    name: robertdebock.fail2ban
  when:
    - fail2ban_enabled | bool
  tags: fail2ban

- name: "Install private CA to trust store"
  ansible.builtin.import_role:
    name: bdellegrazie.ca_certificates
  when: install_cacerts | bool
  tags: cacerts

- name: "Configure user authentication"
  ansible.builtin.import_role:
    name: hellofresh.sssd-ldap
  when: configure_user_auth | bool
  tags: user_auth

- name: "Install & configure etckeeper"
  ansible.builtin.import_role:
    name: elcomtik.etckeeper
  tags: etckeeper

- name: "Install & configure prometheus node-exporter"
  ansible.builtin.import_role:
    name: prometheus.prometheus.node_exporter
  when: install_prometheus_node_exporter | bool
  tags:
    - monitoring
    - exporters:node
